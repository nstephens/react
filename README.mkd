# Command line tool for inotify

## Dependencies

 * [pyinotify](https://github.com/seb-m/pyinotify)
 * [Python 3.x](http://www.python.org/download/releases/3.2/) | [Python 2.x](http://www.python.org/download/releases/2.7.2/)
 * [argparse](http://pypi.python.org/pypi/argparse)

## Usage

See "react --help"

### Hello World
`react.py /tmp -p '*.txt' 'echo $f'`

This is a simple test. Execute the above command and create and modify
directories and files in /tmp. For every file ending with .txt its full path is
printed on the console every time this file is created or changed.

### Executing test suites
`react.py ../ -p '*.hs' ./runTests`

The main motivation of this tool was to be able to trigger the execution of a
test suite each time a source file of the project is modified. This speeds up
my vim-based software development a lot.

### Ingoring files that match a pattern
 react.py -p '*' -x '^.+?\.sw.+?$' /tmp 'echo $f'

The -x flag allows you to use regex patterns to ignore certain files.  The above example is helpful for not triggering events when Vi swap files are created.

### Setting file ACL entries
`react.py /srv/www/team 'setfacl -m g:team:rwx $f'`

A major disadvantage of default [file ACLs](http://linux.die.net/man/1/setfacl)
is that it only reacts on newly created files. If you move a file into a
directory with a default ACL entry, this file's ACL entries are not updated. In
practice this means that sooner or later every default-ACL-based control
management will break. With react you can circumvent this problem.

## Information

 * Licence: [GPL 2.0](http://www.gnu.org/licenses/gpl-2.0.html)
 * Author: Alexander Bernauer (alex@copton.net)
 * Additional work: Nick Stephens (nick@manipulate.org)
